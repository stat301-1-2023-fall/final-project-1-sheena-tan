---
title: "Progress Memo 2"
subtitle: |
  | Final Project 
  | Data Science 1 with R (STAT 301-1)
author: "Sheena Tan"
date: today

format:
  html:
    toc: true
    embed-resources: true

execute:
  echo: false
  warning: false
  
from: markdown+emoji 
---

::: {.callout-tip icon=false}

## Github Repo Link

[https://github.com/stat301-1-2023-fall/final-project-1-sheena-tan.git](https://github.com/stat301-1-2023-fall/final-project-1-sheena-tan.git)

:::

## Updated Data Memo

### Data Source

I am using data from Northwestern's Course and Teacher Evaluation Council (CTEC) system, which is data available to students at Northwestern University. These evaluations provide ratings made by previous students regarding various courses and their instructor, including information like how much time the student spent on the course, what degree requirements the course fulfilled for the student, what year and school the student is in, and how they would rate the instruction and the course across several categories. 

As discussed with Professor Sass, I finished scraping data from the most recent academic year (2022-23) across various undergraduate courses, organizing the data by school and department. I took data from six representative departments, for each of the six Northwestern schools. 

1. Psychology (PSYCH) for Weinberg,
2. Civil and Environmental Engineering (CIV_ENV) for McCormick,
3. Music (MUSIC) for Bienen, 
4. Communication Studies (COMMS) for the School of Communications,
5. Journalism (JOUR) for Medill,
6. and School of Education & Social Policy Core (SESP) for SESP.


### Data Description

The data has a total of 5137 objects across 12 variables.

1. `school`: categorical variable; the school the department is from,
-  `mcmk` for McCormick, 
-  `jour` for Medill, 
-  `comm` for Comms,
-  `bien` for Bienen,
-  `sesp` for SESP,
-  and `wnbg` for Weinberg
2. `dept`: categorical variable; the department the course is offered through, 
-  `psych` for Psychology,
-  `sesp` for SESP Core, 
-  `music` for Music, 
-  `comm_st` for Communication Studies , 
-  `jour` for Journalism, 
-  and `civ_env` for Civil and Environmental Engineering
3. `course_num`: the three digit course number
4. `course_term`: categorical variable; the quarter the course was offered, 
-  `fall` for Fall 2022,
-  `winter` for Winter 2023, 
-  and `spring` for Spring 2023
5. `instructor`: the name of the instructor
6. `inst_rating`: the mean of students' responses to the prompt, "Provide an overall rating of the instruction." rated out of 6
7. `course_rating`: the mean of students' responses to the prompt, "Provide an overall rating of the course" rated out of 6
8. `learn_rating`: the mean of students' responses to the prompt, "Estimate how much you learned in the course." rated out of 6
9. `challenge_rating`: the mean of students' responses to the prompt, "Rate the effectiveness of the course in challenging you intellectually." rated out of 6
10. `interest_rating`: the mean of students' responses to the prompt, "Rate the effectiveness of the instructor in stimulating your interest in the subject." rated out of 6
11. `hours_spent`: the mean of students' reponses to the prompt, "Estimate the average number of hours per week you spent on this course outside of class and lab time."
12. `essay`: text responses to the prompt, "Please summarize your reaction to this course focusing on the aspects that were most important to you."

### Data Preparation
For time limitations during data scraping, the raw data did repeat values for each student essay response. Instead, the first instace of every class had the complete data entered, but following entries for that class were left empty. 

To address these missing values, cleaning occured in three main steps: First, string values were changed to be missing values when empty. Second, missing values were filled from the nearest values above. Finally, the data was examined for missingess and no remaining missingness (other than in the `essay` responses) was found. 

```{r results = 'hide'} 
# install packages
library(tidyverse)
library(ggthemes)
library(patchwork)
library(cowplot)

# read in data
ctec_data_raw <- read.csv("data/ctec_data.csv")

# data cleaning
ctec_data <- ctec_data_raw |> 
  # consider empty strings as missing values
  mutate(
    school = na_if(school, ""),
    dept = na_if(dept, ""),
    course_term = na_if(course_term, ""),
    instructor = na_if(instructor, "")
  ) |> 
  # fill in missing values from the nearest value above
  fill(school, dept, course_num, course_term, instructor, inst_rating, 
       course_rating, learn_rating, challenge_rating, interest_rating, 
       hours_spent, .direction = "down")

# check for missingness
ctec_data |> summarise(across(everything(), ~ sum(is.na(.))))

```

## EDA

### The Background
In the four years that I've been at Northwestern, I've heard my fair share of anecdotes, stereotypes, and stories about the students and classes in the different schools. *SESP classes are easy, but students don't learn anything*; or *McCormick kids never leave their dorms because of how long they have to study*; or this or that class is really great, or this or that professor is really horrible. 

However, CTECs do not provide a built-in mechanism to compare data across courses or across teachers, in a department or across departments. This project wanted to compare data across schools and classes to investigate any patterns that may be of interest, like:

- Which school learns the most from their classes?
- Which school spends the most time on their classes?
- Does putting in more time make the class more rewarding?
- Which school has the best professors? Best classes?
- Does having a better professor influence how much students feel that they learn?
- Who is the most liked and most hated teacher in each department?
- Which classes have the most opinionated CTECs, either good or bad?
- For classes with more than one teacher, who taught it best?
- What are the best classes overall and in each department? 
- What comparisons can we make by level (100-200-300)? 

### Here is what I found.

**Which school spends the most time on their classes?**

```{r}
# separate data by school
mcmk_data <- ctec_data[ctec_data$school == 'mcmk', ]
jour_data <- ctec_data[ctec_data$school == 'jour', ]
comm_data <- ctec_data[ctec_data$school == 'comm', ]
bien_data <- ctec_data[ctec_data$school == 'bien', ]
sesp_data <- ctec_data[ctec_data$school == 'sesp', ]
wnbg_data <- ctec_data[ctec_data$school == 'wnbg', ]

# averages of time spent across schools
labels <- c("mcmk", "jour", "comm", "bien", "sesp", "wnbg")
means_hours <- c(
  mean(mcmk_data$hours_spent),
  mean(jour_data$hours_spent),
  mean(comm_data$hours_spent),
  mean(bien_data$hours_spent),
  mean(sesp_data$hours_spent),
  mean(wnbg_data$hours_spent)
)
avg_hours <- data.frame(labels, means_hours)

# bar plot of hours spent across schools
plot1 <- ggplot(avg_hours, aes(x = labels, y = means_hours, fill = labels)) +
  geom_bar(stat = "identity") +
  scale_fill_manual(
    values = c(
      "#836EAA",
      "#B6ACD1",
      "#836EAA",
      "#4E2A84",
      "#B6ACD1",
      "#B6ACD1"
      )
  ) +
  theme_fivethirtyeight() +
  theme(
    axis.title.x = element_text(size = 8, margin = margin(t = 10)),
    axis.title.y = element_text(size = 8, margin = margin(r = 10)),
    title = element_text(size = 8),
    legend.position = "none",
    legend.title = element_blank()
  ) +
  labs(
    title = "Average hours per week spent per class", 
    x = "school", 
    y = "time spent (hrs)"
  )

ggsave("schools_hours_spent.png", plot1, width = 6, height = 4, units = "in")

```

![Hours Spent Studying By School](schools_hours_spent.png)

We can see that McCormick students spend **significantly more** hours on average (7.41h) than students from other schools. Medill (5.63h) and Bienen (5.69h) students spend more time than students from other schools (\<5h).

**Which school learns the most from their classes?**

```{r}

# averages of amount learned across schools
means_2 <- c(
  mean(mcmk_data$learn_rating),
  mean(jour_data$learn_rating),
  mean(comm_data$learn_rating),
  mean(bien_data$learn_rating),
  mean(sesp_data$learn_rating),
  mean(wnbg_data$learn_rating)
)
avg_learned <- data.frame(labels, means_2)

# bar plot of hours spent across schools
plot2 <- ggplot(avg_learned, aes(x = labels, y = means_2, fill = labels)) +
  geom_bar(stat = "identity") +
  scale_fill_manual(
    values = c(
      "#B6ACD1",
      "#836EAA",
      "#836EAA",
      "#4E2A84",
      "#B6ACD1",
      "#836EAA"
      )
  ) +
  theme_fivethirtyeight() +
  theme(
    axis.title.x = element_text(size = 10, margin = margin(t = 10)),
    axis.title.y = element_text(size = 10, margin = margin(r = 10)),
    legend.position = "none",
    legend.title = element_blank()
  ) +
  labs(
    title = "Average ratings of amount learned", 
    x = "school", 
    y = "rating of amount learned"
  )

```

The differences in ratings here are less drastic, with students from all schools answering an average of 4+ on a 1 to 6 scale. However, McCormick students **learned the most** on average, being the only school with an average rating greater than 5.

**Does putting in more time make the class more rewarding?** 

```{r}

# scatterplot of amount learned by hours spent across schools
plot3 <- ggplot(
  data = ctec_data,
  mapping = aes(x = hours_spent, y = learn_rating, color = school)
  ) +
  geom_point(stat = "identity") +
  scale_color_manual(
    values = c(
      "#1f77b4",
      "#ff7f0e",
      "#2ca02c",
      "#d62728",
      "#9467bd",
      "#8c564b"
      )
    ) +
  theme_fivethirtyeight() +
  theme(
    title = element_text(size = 10),
    axis.title.x = element_text(size = 10, margin = margin(t = 10)),
    axis.title.y = element_text(size = 10, margin = margin(r = 10)),
    legend.position = c(1, 0),
    legend.justification = c(1, 0),
    legend.title = element_blank()
  ) +
  labs(
    title = "Amount learned rating vs. hours spent, per course", 
    x = "time spent (hrs)", 
    y = "rating of amount learned"
  )

```

It seems that a relationship does exist. For example, ***NONE*** of the courses that required less than 10 hours of work had a learning rating of less than 3.5. At the same time, higher learning ratings were spread across the board, with some classes requiring minimal hours of work and still others requiring over 13 hours on average. In other words, it doesn't take a lot of time to feel like you learned a lot, but if it does take time, you'll feel like you learned from it.

## Progress Summary
For this progress memo, I completed over 10 hours of data collection, cleaned the data, and am currently exploring the fourth of the ten questions I was interested in, described above. For the remaining questions, my next steps will be as follows:

- Does putting in more time make the class more rewarding?: **Break up the total plot to look at each school in its own plot**
- Which school has the best professors? Best classes?: **define a new instructor measure using the inst_rating and interest_rating**, then **take the means of the new instructor rating and course_rating for each school and compare using bar plots**, also **filter for positive and negative affect codewords to complete a sentiment analysis on the CTECs** in order to better inform the course ratings
- Which school is the best overall? **make radar plots for each school**
- Does having a better professor influence how much students feel that they learn? **use the new instructor measure and compare to learn_rating using a scatterplot** 
- Who is the most liked and most hated teacher in each department? **use the new instructor rating to find which teachers have the highest and lowest ratings**
- Which classes have the most opinionated CTECs, either good or bad? **see which sentiment analyses are the most positive and most negative**
- For classes with more than one teacher, who taught it best? **filter for classes with unique instructor values but same course and department numbers**, then **compare instructor ratings**
- What are the best classes overall and in each department? **create enjoyment rating based on combination of inst_rating, course_rating, learn_rating, and interest_rating**, consider including challenge_rating, then **find teachers with the highest enjoyment ratings** in each department and overall
- What comparisons can we make by level (100-200-300)? **group .by level and run analyses that may be of interest for these groups**, like if students feel like they learn more depending on level for example 

I think my progress is in great shape. I estimate I still have about 10 hours of work left. This project was very heavy on data collection, as you know. 